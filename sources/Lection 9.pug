section
  h4 Моноиды
  p Моноидом называется тройка (M, #, u), где # - ассоциативная бинарная операция на M, а u - ее единичный элемент.
  p Моноид полугруппа с нейтральным элементом. m # u = m = u # m

section
  h4 Моноиды
  ul
    li (Int, +, 0)
    li.fragment (Int, *, 1)
    li.fragment (Bool, &&, True)
    li.fragment (Bool, ||, False)
    li.fragment (M, min, Top), где M - вполне упорядоченное множество, а Top - его максимальный элемент
    li.fragment (списки, append, [])
    li.fragment (множества, объединение, пустое множество)
    li.fragment (сортированные списки, merge, пустой список)
    li.fragment (матрицы, умножение, единичная матрица)

section
  h4 Моноиды
  ul
    li.fragment (эндоморфизмы, композиция, тождественная функция), где эндоморфизмом на множестве M называется функция из M в M
    li.fragment (блоки кода, последовательное выполнение, пустой блок кода)

section
  h4 Моноиды
  ul
    li Если M1,M2 - моноиды, то M1 x M2 - моноид (декартово произведение множеств, покомпонентное применение #, пара из двух единиц)
    li.
      Если # - ассоциативная бинарная операция на M, но единичного элемента среди M нет, то можно его добавить:
      (M+{e}, #', e), где x #' e = e #' x = x, x#'y = x#y
    li Если (M, #, e) - моноид, то (M, @, e) - тоже моноид, где x @ y = y # x - т.н. "двойственный" моноид
    li Если (M, #, e) - моноид, то для любого P тотальные функции P->M образуют моноид
      pre
        code.hs.
          (P -> M, \f1 f2 -> \p -> f1 p # f2 p, \p -> e)

section
  h4 Моноиды
  ul
    li Например, если M - моноид блоков кода, то можно получить моноид (процедуры с параметром P, последовательное выполнение, пустая процедура)
    li Аналогично - частичные функции или словари - моноид по объединению

section
  h4 Гомоморфизм моноидов
  p.
    Если (M, #, e) и (P, @, u) – моноиды,
    то функция f :: M -> P
    называется гомоморфизмом между этими двумя моноидами,
    если f (m1 # m2) = f m1 @ f m2 для всех m1, m2 из M.

    чему равно u ?

section
  h4 Гомоморфизм моноидов
  img(src='./img/9-0.png')

section
  h4 Списочный гомоморфизм
  p Списочным гомоморфизмом называется гомоморфизм из моноида (списки, append, пустой список) в какой-либо другой моноид.
  p.
    То есть, функция f называется списочным гомоморфизмом, если существует оператор #, такой, что f (xs ++ ys) = f xs # f ys.
    Это свойство позволяет независимо вычислить результаты применения функции для подсписков,
    и собрать из них результат для всего списка при помощи #.

section
  h4 Списочный гомоморфизм
  table
    thead
      td
      td #
      td u
      td m
    tr
      td sum
      td +
      td 0
      td \x -> x
    tr
      td length
      td +
      td 0
      td \x -> 1
    tr
      td filter p
      td ++
      td []
      td \x -> if (p x) then [x] else []
    tr
      td map f
      td ++
      td []
      td \x -> f x
    tr
      td sort
      td merge
      td []
      td \x -> [x]


